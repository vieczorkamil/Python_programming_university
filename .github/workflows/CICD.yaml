name: cicd

on:
  push:
    branches: [master]
  
jobs:
  # CI:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3
  #   - name: Setup Python environment
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.8'
  #   - name: Install requirements
  #     working-directory: src
  #     run: pip install -r requirements.txt
  #   - name: Lint with flake8
  #     working-directory: src
  #     run: |
  #       flake8 --ignore=E501,E231 *.py
  #       pylint --disable=C0301 --disable=C0114 --disable=C0116 --disable=W0612 --disable=R0912 --disable=R0914 --disable=W0603 --disable=C0103 --disable=R0915 --disable=R0913 --disable=W0621 --disable=E1101 *.py

  # CD:
  #   # needs: CI
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #   - name: Build and deploy Docker image
  #     uses: gonuit/heroku-docker-deploy@v1.4.0 # GitHub action name (leave it as it is).
  #     with:
  #       email: ${{ secrets.HEROKU_EMAIL }}
  #       heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
  #       heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
  #       dockerfile_directory: ./src
  #       dockerfile_name: Dockerfile
  #       docker_options: "--no-cache"
  #       process_type: web

  build:
    # needs: test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Build docker image
        working-directory: src
        env: 
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku container:login
          heroku container:push web -a numberplatedetector

  deploy:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Deploy docker image
        env: 
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku container:login
          heroku container:release web -a numberplatedetector